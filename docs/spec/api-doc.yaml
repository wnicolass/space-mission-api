openapi: 3.0.3
info:
  title: Space Mission API
  summary: A space mission manager
  description: Simple server where users can schedule missions to habitable planets
  version: 1.0.0
servers:
  - url: https://localhost:3000/v1
    description: Main development server
license:
  name: MIT
  url: https://github.com/wnicolass/nasa-ztm-ts/blob/main/LICENSE.md
paths:
  /auth/signup:
    post:
      summary: Allows an anonymous user to create an account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignUp'
      responses:
        '201':
          description: User successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignUpResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentError'
  /auth/signin:
    post:
      summary: Allows a user to authenticate its identity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignIn'
      responses:
        '200':
          description: User successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignInResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentError'
        '404':
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /users/{userId}:
    get:
      summary: Returns a user by ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '404':
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /launches:
    get:
      summary: Returns a list of launches
      responses:
        '200':
          description: Launches found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Launch'
        '404':
          description: Launches not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /planets:
    get:
      summary: Returns a list of planets
      responses:
        '200':
          description: An array of planets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Planet'
        '404':
          description: No planets were found
